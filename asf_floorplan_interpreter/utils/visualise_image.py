import numpy as np
import matplotlib.pyplot as plt
from PIL import Image, ImageDraw, ImageFont
from asf_floorplan_interpreter.getters.get_data import (
    load_prodigy_jsonl_s3_data,
    get_s3_data_paths,
    load_s3_data,
    get_s3_resource,
)
from asf_floorplan_interpreter import BUCKET_NAME
import io


def get_corresponding_label(img_path, label_list):
    """
    Function that takes a single image path, and returns its corresponding label
    Arguments:
    img_path: A single element of the list generated by running get_s3_data_paths()
    label_list: The entire list generated by running load_prodigy_jsonl_s3_data()
    """
    # Get image name
    img_name = img_path.split("/")[-1].split(".")[0]
    # Get a list of urls from each label
    image_urls = [label_list[i]["image"] for i in range(0, len(label_list))]
    # Extract the image name from each url
    label_names = [i.split("/")[-1].split(".")[0] for i in image_urls]
    # Get position of the label corresponding to the image given
    position = label_names.index(img_name)
    return label_list[position]


def visualise_image(image_position, img_list, label_list):
    """Takes an image and corresponding label, and displays the image and its labels
    Arguments:
    image position [int]: position of the image you want in the image list
    img_list: The list generated by running get_s3_data_paths
    label_list: The list generated by running load_prodigy_jsonl_data"""

    img_path = img_list[image_position]
    object_label = get_corresponding_label(img_path, label_list)

    img = load_s3_data(BUCKET_NAME, img_path)
    readable_image = io.BytesIO(img)
    visual_image = Image.open(readable_image)
    labels = object_label["spans"]

    # Create a drawing context
    draw = ImageDraw.Draw(visual_image)

    # Overlay bounding boxes and labels on the image
    for label in labels:
        if label["type"] == "polygon":
            points = label["points"]
            for i in range(len(points)):
                x1, y1 = points[i]
                x2, y2 = points[(i + 1) % len(points)]
                draw.line([(x1, y1), (x2, y2)], fill=label["color"], width=2)
            label_text = label["label"]
            x, y = points[0]  # Take the first point for labeling
            font_size = 36
            font = ImageFont.truetype(
                font="/System/Library/Fonts/Supplemental/Arial.ttf", size=font_size
            )
            draw.text(
                (x, y), label_text, fill="black", font=font
            )  # Adjust font and fill color as needed

    # Display the image with the overlaid bounding boxes and labels
    plt.imshow(np.array(visual_image))
    plt.axis("off")
    plt.show()


if __name__ == "__main__":
    """Example prints three annotated rooms, from the 301023 batch"""
    label_list = load_prodigy_jsonl_s3_data(
        BUCKET_NAME, "data/annotation/prodigy_labelled/301023/room_dataset.jsonl"
    )
    img_list = get_s3_data_paths(
        BUCKET_NAME,
        "data/annotation/prodigy_labelled/301023/yolo_formatted/room_yolo_formatted/images/train/",
    )
    for i in range(0, 3):
        visualise_image(i, img_list, label_list)
